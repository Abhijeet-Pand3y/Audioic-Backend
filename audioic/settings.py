"""
Django settings for audioic project.

Generated by 'django-admin startproject' using Django 4.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-2esve8s7$e@eusb8p1tc@t_bvgwh_d783%^vumiaa)-p48vqma'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
	'rest_framework.authtoken',
    'user',
    'narrator',
    'audiobooks',
    'event',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
]

ROOT_URLCONF = 'audioic.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'audioic.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {  
    		'default': {  
        	'ENGINE': 'django.db.backends.mysql',  
        	'NAME': 'audioic',  
        	'USER': 'root',  
        	'PASSWORD': '12345',  
        	'HOST': '127.0.0.1',  
        	'PORT': '3306',  
        	'OPTIONS': {  
            	'init_command': "SET sql_mode='STRICT_TRANS_TABLES'"  
        		}  
    		}  
	}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    # 'DEFAULT_PERMISSION_CLASSES': [
    #     'rest_framework.permissions.IsAuthenticated',
    # ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
		#'rest_framework.authentication.BasicAuthentication',
		#'rest_framework.authentication.SessionAuthentication',
		'rest_framework.authentication.TokenAuthentication',
	],
    'MAX_PAGE_SIZE': 200 * 1024 * 1024,  # 200 megabytes
}# 'rest_framework.authentication.TokenAuthentication', for token based custom authentication/ signups 

#for images/mp3 files
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'


SOCIALACCOUNT_PROVIDERS = {
    'google': {
        "APP": {
            "client_id": "64311051464-c7a5hpe3ibi8bh1o37pcup66dfn636d1.apps.googleusercontent.com",
            "secret": "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",
            "key": "",
        },

        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'offline',
        }
       
    },

    

    'facebook': {
        'METHOD': 'oauth2',
        'SDK_URL': '//https://connect.facebook.net/{locale}/sdk.js',
        'SCOPE': ['email', 'public_profile'],
        'AUTH_PARAMS': {'auth_type': 'reauthenticate'},
        'INIT_PARAMS': {'cookie': True},
        'FIELDS': [
            'id',
            'first_name',
            'last_name',
            'middle_name',
            'name',
            'name_format',
            'picture',
            'short_name'
        ],
        'EXCHANGE_TOKEN': True,
        'LOCALE_FUNC': 'path.to.callable',
        'VERIFIED_EMAIL': False,
        'VERSION': 'v13.0',
       
    },

    'reddit': {
        'reddit': {
        'AUTH_PARAMS': {'duration': 'permanent'},
        'SCOPE': ['identity', 'submit'],
        'USER_AGENT': 'django:myappid:1.0 (by /u/yourredditname)',
    }
   


       
    },
    
  
    

    
 
}
#This site ID should match with the ID stored by django. Mess around with it to find the correct one.
SITE_ID = 3

#redirect where after successful authentication
LOGIN_REDIRECT_URL = '/'

#redirect where after successful logout
LOGOUT_REDIRECT_URL = '/'

#defines whether the user has verfied email or not
ACCOUNT_EMAIL_VERIFICATION = None

#defines whether the user should be logged out as a GET request. If we expose our logout as a GET request and present it as a link, these processes may inadvertently log users out while trying to prefetch links on the page.
ACCOUNT_LOGOUT_ON_GET = False

#backend validators for Oauth/ is messing up with the django rest admin framework/ Oauth works fine without these or with these, however admin panel doesn't work with these settings
# AUTHENTICATION_BACKENDS = [
#     'django.contrib.auth.backends.ModelBackend',
#     'allauth.account.auth_backends.AuthenticationBackend'
# ],
#for custom user model
AUTH_USER_MODEL = "user.User"

#CORS allowing
CORS_ALLOW_ALL_ORIGINS: True

#for email verification
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp-mail.outlook.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'audioic69@outlook.com'
EMAIL_HOST_PASSWORD = 'Besarpani@1'

# RECIPIENT_ADDRESS = env('RECIPIENT_ADDRESS')
# DEFAULT_FROM_EMAIL = env('DEFAULT_FROM_EMAIL')